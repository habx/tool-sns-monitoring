version: 2.1

workflows:
  deploy-to-kubernetes:
    jobs:
      - fetch-node-modules:
          context: default_env_vars
          filters:
            tags:
              only: /^v.*/
      - build:
          context: default_env_vars
          requires:
          - get-build-infos
          filters:
            tags:
              only: /^v.*/
      - get-build-infos:
          context: default_env_vars
          requires:
          - fetch-node-modules
          filters:
            tags:
              only: /^v.*/
      - build-container:
          context: default_env_vars
          requires:
          - build
          filters:
            tags:
              only: /^v.*/
            branches:
              only: /dev/
      - deploy-to-kubernetes:
          context: default_env_vars
          requires:
          - build-container
          filters:
            tags:
              only: /^v.*/
            branches:
              only: /dev/

jobs:
  fetch-node-modules:
    docker:
      - image: habx/node-base:9-alpine-npm6
    steps:
      - checkout
      - restore_cache:
          name: Restore node modules cache
          key: node_modules-{{ checksum "package-lock.json" }}
      - run:
          command: |
            npm install
      - save_cache:
          name: Save node modules cache
          key: node_modules-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
      - persist_to_workspace:
          root: /root
          paths:
            - project

  get-build-infos:
    docker:
      - image: habx/devops-build-infos
    steps:
      - attach_workspace:
          at: /root/
      - run: /build/run.sh  
      - persist_to_workspace:
          root: /root
          paths:
            - project

  build:
    docker:
      - image: habx/node-base:9-alpine-npm6
    steps:
      - attach_workspace:
          at: /root/
      - run:
          command: |
            npm run build
          environment:
            NODE_ENV: production
            PUBLIC_URL: /tool-sns-monitoring
      - persist_to_workspace:
          root: /root
          paths:
            - project

  build-container:
    docker:
      - image: plugins/ecr:17.05
    steps:
      - attach_workspace:
          at: /root/
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          command: |
            export BUILD_REF=$(if [ -z "$CIRCLE_TAG" ]; then echo ${CIRCLE_BRANCH/\//-}-${CIRCLE_SHA1:0:7}; else echo $CIRCLE_TAG; fi)

            export PLUGIN_TAGS=${BUILD_REF}
            export PLUGIN_BUILD_ARGS="ASSET_URL_PREFIX=https://cdn.habx.fr/${CIRCLE_PROJECT_REPONAME}/${BUILD_REF}"
            export PLUGIN_REPO=724009402066.dkr.ecr.eu-west-1.amazonaws.com/${CIRCLE_PROJECT_REPONAME}
            /usr/local/bin/dockerd-entrypoint.sh /bin/drone-docker-ecr

  deploy-to-kubernetes:
    docker:
    - image: quay.io/honestbee/drone-kubernetes
    steps:
    - run:
        command: |
          export BUILD_REF=$(if [ -z "$CIRCLE_TAG" ]; then echo ${CIRCLE_BRANCH/\//-}-${CIRCLE_SHA1:0:7}; else echo $CIRCLE_TAG; fi)
          export DST_NAMESPACE=$(if [ -z "$CIRCLE_TAG" ]; then echo dev; else echo staging; fi)

          export PLUGIN_TAG=${BUILD_REF}
          export PLUGIN_REPO=724009402066.dkr.ecr.eu-west-1.amazonaws.com/${CIRCLE_PROJECT_REPONAME}
          export PLUGIN_CONTAINER=${CIRCLE_PROJECT_REPONAME}
          export PLUGIN_DEPLOYMENT=${CIRCLE_PROJECT_REPONAME}
          export PLUGIN_NAMESPACE=${DST_NAMESPACE}
          export PLUGIN_KUBERNETES_SERVER=${KUBERNETES_SERVER_DEV}
          export PLUGIN_KUBERNETES_TOKEN=${KUBERNETES_TOKEN_DEV}
          /bin/update.sh
